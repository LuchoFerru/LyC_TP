Terminals unused in grammar

    DOS_PUNTOS


Grammar

    0 $accept: programa $end

    1 programa: PROGRAM algoritmo END
    2         | PROGRAM zona_declaracion algoritmo END

    3 zona_declaracion: declaraciones

    4 declaraciones: declaracion
    5              | declaraciones declaracion

    6 $@1: ε

    7 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    8 lista_var: ID
    9          | lista_var COMA ID

   10 lista_tipo: lista_tipo COMA TIPO_INT
   11           | lista_tipo COMA TIPO_FLOAT
   12           | lista_tipo COMA TIPO_STRING
   13           | TIPO_INT
   14           | TIPO_FLOAT
   15           | TIPO_STRING

   16 algoritmo: bloque

   17 bloque: sentencia
   18       | bloque sentencia

   19 sentencia: asignacion
   20          | seleccion
   21          | ciclo
   22          | entrada
   23          | salida
   24          | contar

   25 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

   26 asignacion: ID OPAR_ASIG expresion

   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF
   28          | IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

   29 condicion: comparacion
   30          | comparacion OP_LOG_AND comparacion
   31          | comparacion OP_LOG_OR comparacion
   32          | comparacion OP_LOG_NOT comparacion

   33 comparacion: expresion COMP_IGUAL expresion
   34            | expresion COMP_MAYOR expresion
   35            | expresion COMP_MENOR expresion
   36            | expresion COMP_MAYOR_IGUAL expresion
   37            | expresion COMP_MENOR_IGUAL expresion
   38            | expresion COMP_DISTINTO expresion

   39 $@2: ε

   40 expresion: expresion $@2 OP_MAS termino

   41 $@3: ε

   42 expresion: expresion $@3 OP_MENOS termino
   43          | termino

   44 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

   45 lista_a_contar: lista_a_contar COMA factor
   46               | factor

   47 termino: termino OP_MULT factor
   48        | termino OP_DIV factor
   49        | factor

   50 factor: ID
   51       | CTE_ENTERA
   52       | CTE_REAL
   53       | CTE_STRING
   54       | PAR_A expresion PAR_C

   55 entrada: GET ID

   56 salida: DISPLAY CTE_STRING
   57       | DISPLAY ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 1 2
    END (259) 1 2
    IF (260) 27 28
    THEN (261) 27 28
    ENDIF (262) 27 28
    ELSE (263) 28
    WHILE (264) 25
    DISPLAY (265) 56 57
    GET (266) 55
    DIM (267) 7
    AS (268) 7
    COMP_IGUAL (269) 33
    COMP_MAYOR (270) 34
    COMP_MENOR (271) 35
    COMP_MAYOR_IGUAL (272) 36
    COMP_MENOR_IGUAL (273) 37
    COMP_DISTINTO (274) 38
    OPAR_ASIG (275) 26 44
    TIPO_INT (276) 10 13
    TIPO_FLOAT (277) 11 14
    TIPO_STRING (278) 12 15
    CONTAR (279) 44
    CTE_ENTERA <num> (280) 51
    CTE_REAL <real> (281) 52
    CTE_STRING <str> (282) 53 56
    OP_MAS (283) 40
    OP_MENOS (284) 42
    OP_MULT (285) 47
    OP_DIV (286) 48
    OP_LOG_AND (287) 30
    OP_LOG_OR (288) 31
    OP_LOG_NOT (289) 32
    DOS_PUNTOS (290)
    PUN_Y_COM (291) 44
    COMA (292) 9 10 11 12 45
    ID <strid> (293) 8 9 26 44 50 55 57
    PAR_A (294) 25 27 28 44 54
    PAR_C (295) 25 27 28 44 54
    LLAVE_A (296) 25
    LLAVE_C (297) 25
    COR_A (298) 7 44
    COR_C (299) 7 44


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    programa (46)
        on left: 1 2
        on right: 0
    zona_declaracion (47)
        on left: 3
        on right: 2
    declaraciones (48)
        on left: 4 5
        on right: 3 5
    declaracion (49)
        on left: 7
        on right: 4 5
    $@1 (50)
        on left: 6
        on right: 7
    lista_var (51)
        on left: 8 9
        on right: 7 9
    lista_tipo (52)
        on left: 10 11 12 13 14 15
        on right: 7 10 11 12
    algoritmo (53)
        on left: 16
        on right: 1 2
    bloque (54)
        on left: 17 18
        on right: 16 18 25 27 28
    sentencia (55)
        on left: 19 20 21 22 23 24
        on right: 17 18
    ciclo (56)
        on left: 25
        on right: 21
    asignacion (57)
        on left: 26
        on right: 19
    seleccion (58)
        on left: 27 28
        on right: 20
    condicion (59)
        on left: 29 30 31 32
        on right: 25 27 28
    comparacion (60)
        on left: 33 34 35 36 37 38
        on right: 29 30 31 32
    expresion (61)
        on left: 40 42 43
        on right: 26 33 34 35 36 37 38 40 42 54
    $@2 (62)
        on left: 39
        on right: 40
    $@3 (63)
        on left: 41
        on right: 42
    contar (64)
        on left: 44
        on right: 24
    lista_a_contar (65)
        on left: 45 46
        on right: 44 45
    termino (66)
        on left: 47 48 49
        on right: 40 42 43 47 48
    factor (67)
        on left: 50 51 52 53 54
        on right: 44 45 46 47 48 49
    entrada (68)
        on left: 55
        on right: 22
    salida (69)
        on left: 56 57
        on right: 23


State 0

    0 $accept: • programa $end

    PROGRAM  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: PROGRAM • algoritmo END
    2         | PROGRAM • zona_declaracion algoritmo END

    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    DIM      shift, and go to state 7
    ID       shift, and go to state 8

    zona_declaracion  go to state 9
    declaraciones     go to state 10
    declaracion       go to state 11
    algoritmo         go to state 12
    bloque            go to state 13
    sentencia         go to state 14
    ciclo             go to state 15
    asignacion        go to state 16
    seleccion         go to state 17
    contar            go to state 18
    entrada           go to state 19
    salida            go to state 20


State 2

    0 $accept: programa • $end

    $end  shift, and go to state 21


State 3

   27 seleccion: IF • PAR_A condicion PAR_C THEN bloque ENDIF
   28          | IF • PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

    PAR_A  shift, and go to state 22


State 4

   25 ciclo: WHILE • PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

    PAR_A  shift, and go to state 23


State 5

   56 salida: DISPLAY • CTE_STRING
   57       | DISPLAY • ID

    CTE_STRING  shift, and go to state 24
    ID          shift, and go to state 25


State 6

   55 entrada: GET • ID

    ID  shift, and go to state 26


State 7

    7 declaracion: DIM • $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    $default  reduce using rule 6 ($@1)

    $@1  go to state 27


State 8

   26 asignacion: ID • OPAR_ASIG expresion
   44 contar: ID • OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    OPAR_ASIG  shift, and go to state 28


State 9

    2 programa: PROGRAM zona_declaracion • algoritmo END

    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8

    algoritmo   go to state 29
    bloque      go to state 13
    sentencia   go to state 14
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 10

    3 zona_declaracion: declaraciones •
    5 declaraciones: declaraciones • declaracion

    DIM  shift, and go to state 7

    $default  reduce using rule 3 (zona_declaracion)

    declaracion  go to state 30


State 11

    4 declaraciones: declaracion •

    $default  reduce using rule 4 (declaraciones)


State 12

    1 programa: PROGRAM algoritmo • END

    END  shift, and go to state 31


State 13

   16 algoritmo: bloque •
   18 bloque: bloque • sentencia

    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8

    $default  reduce using rule 16 (algoritmo)

    sentencia   go to state 32
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 14

   17 bloque: sentencia •

    $default  reduce using rule 17 (bloque)


State 15

   21 sentencia: ciclo •

    $default  reduce using rule 21 (sentencia)


State 16

   19 sentencia: asignacion •

    $default  reduce using rule 19 (sentencia)


State 17

   20 sentencia: seleccion •

    $default  reduce using rule 20 (sentencia)


State 18

   24 sentencia: contar •

    $default  reduce using rule 24 (sentencia)


State 19

   22 sentencia: entrada •

    $default  reduce using rule 22 (sentencia)


State 20

   23 sentencia: salida •

    $default  reduce using rule 23 (sentencia)


State 21

    0 $accept: programa $end •

    $default  accept


State 22

   27 seleccion: IF PAR_A • condicion PAR_C THEN bloque ENDIF
   28          | IF PAR_A • condicion PAR_C THEN bloque ELSE bloque ENDIF

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    condicion    go to state 38
    comparacion  go to state 39
    expresion    go to state 40
    termino      go to state 41
    factor       go to state 42


State 23

   25 ciclo: WHILE PAR_A • condicion PAR_C LLAVE_A bloque LLAVE_C

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    condicion    go to state 43
    comparacion  go to state 39
    expresion    go to state 40
    termino      go to state 41
    factor       go to state 42


State 24

   56 salida: DISPLAY CTE_STRING •

    $default  reduce using rule 56 (salida)


State 25

   57 salida: DISPLAY ID •

    $default  reduce using rule 57 (salida)


State 26

   55 entrada: GET ID •

    $default  reduce using rule 55 (entrada)


State 27

    7 declaracion: DIM $@1 • COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    COR_A  shift, and go to state 44


State 28

   26 asignacion: ID OPAR_ASIG • expresion
   44 contar: ID OPAR_ASIG • CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CONTAR      shift, and go to state 45
    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 46
    termino    go to state 41
    factor     go to state 42


State 29

    2 programa: PROGRAM zona_declaracion algoritmo • END

    END  shift, and go to state 47


State 30

    5 declaraciones: declaraciones declaracion •

    $default  reduce using rule 5 (declaraciones)


State 31

    1 programa: PROGRAM algoritmo END •

    $default  reduce using rule 1 (programa)


State 32

   18 bloque: bloque sentencia •

    $default  reduce using rule 18 (bloque)


State 33

   51 factor: CTE_ENTERA •

    $default  reduce using rule 51 (factor)


State 34

   52 factor: CTE_REAL •

    $default  reduce using rule 52 (factor)


State 35

   53 factor: CTE_STRING •

    $default  reduce using rule 53 (factor)


State 36

   50 factor: ID •

    $default  reduce using rule 50 (factor)


State 37

   54 factor: PAR_A • expresion PAR_C

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 48
    termino    go to state 41
    factor     go to state 42


State 38

   27 seleccion: IF PAR_A condicion • PAR_C THEN bloque ENDIF
   28          | IF PAR_A condicion • PAR_C THEN bloque ELSE bloque ENDIF

    PAR_C  shift, and go to state 49


State 39

   29 condicion: comparacion •
   30          | comparacion • OP_LOG_AND comparacion
   31          | comparacion • OP_LOG_OR comparacion
   32          | comparacion • OP_LOG_NOT comparacion

    OP_LOG_AND  shift, and go to state 50
    OP_LOG_OR   shift, and go to state 51
    OP_LOG_NOT  shift, and go to state 52

    $default  reduce using rule 29 (condicion)


State 40

   33 comparacion: expresion • COMP_IGUAL expresion
   34            | expresion • COMP_MAYOR expresion
   35            | expresion • COMP_MENOR expresion
   36            | expresion • COMP_MAYOR_IGUAL expresion
   37            | expresion • COMP_MENOR_IGUAL expresion
   38            | expresion • COMP_DISTINTO expresion
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    COMP_IGUAL        shift, and go to state 53
    COMP_MAYOR        shift, and go to state 54
    COMP_MENOR        shift, and go to state 55
    COMP_MAYOR_IGUAL  shift, and go to state 56
    COMP_MENOR_IGUAL  shift, and go to state 57
    COMP_DISTINTO     shift, and go to state 58

    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 39 ($@2)

    $@2  go to state 59
    $@3  go to state 60


State 41

   43 expresion: termino •
   47 termino: termino • OP_MULT factor
   48        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 61
    OP_DIV   shift, and go to state 62

    $default  reduce using rule 43 (expresion)


State 42

   49 termino: factor •

    $default  reduce using rule 49 (termino)


State 43

   25 ciclo: WHILE PAR_A condicion • PAR_C LLAVE_A bloque LLAVE_C

    PAR_C  shift, and go to state 63


State 44

    7 declaracion: DIM $@1 COR_A • lista_var COR_C AS COR_A lista_tipo COR_C

    ID  shift, and go to state 64

    lista_var  go to state 65


State 45

   44 contar: ID OPAR_ASIG CONTAR • PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PAR_A  shift, and go to state 66


State 46

   26 asignacion: ID OPAR_ASIG expresion •
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 39 ($@2)
    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 26 (asignacion)

    $@2  go to state 59
    $@3  go to state 60


State 47

    2 programa: PROGRAM zona_declaracion algoritmo END •

    $default  reduce using rule 2 (programa)


State 48

   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino
   54 factor: PAR_A expresion • PAR_C

    PAR_C  shift, and go to state 67

    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 39 ($@2)

    $@2  go to state 59
    $@3  go to state 60


State 49

   27 seleccion: IF PAR_A condicion PAR_C • THEN bloque ENDIF
   28          | IF PAR_A condicion PAR_C • THEN bloque ELSE bloque ENDIF

    THEN  shift, and go to state 68


State 50

   30 condicion: comparacion OP_LOG_AND • comparacion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    comparacion  go to state 69
    expresion    go to state 40
    termino      go to state 41
    factor       go to state 42


State 51

   31 condicion: comparacion OP_LOG_OR • comparacion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    comparacion  go to state 70
    expresion    go to state 40
    termino      go to state 41
    factor       go to state 42


State 52

   32 condicion: comparacion OP_LOG_NOT • comparacion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    comparacion  go to state 71
    expresion    go to state 40
    termino      go to state 41
    factor       go to state 42


State 53

   33 comparacion: expresion COMP_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 72
    termino    go to state 41
    factor     go to state 42


State 54

   34 comparacion: expresion COMP_MAYOR • expresion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 73
    termino    go to state 41
    factor     go to state 42


State 55

   35 comparacion: expresion COMP_MENOR • expresion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 74
    termino    go to state 41
    factor     go to state 42


State 56

   36 comparacion: expresion COMP_MAYOR_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 75
    termino    go to state 41
    factor     go to state 42


State 57

   37 comparacion: expresion COMP_MENOR_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 76
    termino    go to state 41
    factor     go to state 42


State 58

   38 comparacion: expresion COMP_DISTINTO • expresion

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    expresion  go to state 77
    termino    go to state 41
    factor     go to state 42


State 59

   40 expresion: expresion $@2 • OP_MAS termino

    OP_MAS  shift, and go to state 78


State 60

   42 expresion: expresion $@3 • OP_MENOS termino

    OP_MENOS  shift, and go to state 79


State 61

   47 termino: termino OP_MULT • factor

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    factor  go to state 80


State 62

   48 termino: termino OP_DIV • factor

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    factor  go to state 81


State 63

   25 ciclo: WHILE PAR_A condicion PAR_C • LLAVE_A bloque LLAVE_C

    LLAVE_A  shift, and go to state 82


State 64

    8 lista_var: ID •

    $default  reduce using rule 8 (lista_var)


State 65

    7 declaracion: DIM $@1 COR_A lista_var • COR_C AS COR_A lista_tipo COR_C
    9 lista_var: lista_var • COMA ID

    COMA   shift, and go to state 83
    COR_C  shift, and go to state 84


State 66

   44 contar: ID OPAR_ASIG CONTAR PAR_A • factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    factor  go to state 85


State 67

   54 factor: PAR_A expresion PAR_C •

    $default  reduce using rule 54 (factor)


State 68

   27 seleccion: IF PAR_A condicion PAR_C THEN • bloque ENDIF
   28          | IF PAR_A condicion PAR_C THEN • bloque ELSE bloque ENDIF

    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8

    bloque      go to state 86
    sentencia   go to state 14
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 69

   30 condicion: comparacion OP_LOG_AND comparacion •

    $default  reduce using rule 30 (condicion)


State 70

   31 condicion: comparacion OP_LOG_OR comparacion •

    $default  reduce using rule 31 (condicion)


State 71

   32 condicion: comparacion OP_LOG_NOT comparacion •

    $default  reduce using rule 32 (condicion)


State 72

   33 comparacion: expresion COMP_IGUAL expresion •
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 39 ($@2)
    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 33 (comparacion)

    $@2  go to state 59
    $@3  go to state 60


State 73

   34 comparacion: expresion COMP_MAYOR expresion •
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 39 ($@2)
    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 34 (comparacion)

    $@2  go to state 59
    $@3  go to state 60


State 74

   35 comparacion: expresion COMP_MENOR expresion •
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 39 ($@2)
    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 35 (comparacion)

    $@2  go to state 59
    $@3  go to state 60


State 75

   36 comparacion: expresion COMP_MAYOR_IGUAL expresion •
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 39 ($@2)
    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 36 (comparacion)

    $@2  go to state 59
    $@3  go to state 60


State 76

   37 comparacion: expresion COMP_MENOR_IGUAL expresion •
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 39 ($@2)
    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 37 (comparacion)

    $@2  go to state 59
    $@3  go to state 60


State 77

   38 comparacion: expresion COMP_DISTINTO expresion •
   40 expresion: expresion • $@2 OP_MAS termino
   42          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 39 ($@2)
    OP_MENOS  reduce using rule 41 ($@3)
    $default  reduce using rule 38 (comparacion)

    $@2  go to state 59
    $@3  go to state 60


State 78

   40 expresion: expresion $@2 OP_MAS • termino

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    termino  go to state 87
    factor   go to state 42


State 79

   42 expresion: expresion $@3 OP_MENOS • termino

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    termino  go to state 88
    factor   go to state 42


State 80

   47 termino: termino OP_MULT factor •

    $default  reduce using rule 47 (termino)


State 81

   48 termino: termino OP_DIV factor •

    $default  reduce using rule 48 (termino)


State 82

   25 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A • bloque LLAVE_C

    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8

    bloque      go to state 89
    sentencia   go to state 14
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 83

    9 lista_var: lista_var COMA • ID

    ID  shift, and go to state 90


State 84

    7 declaracion: DIM $@1 COR_A lista_var COR_C • AS COR_A lista_tipo COR_C

    AS  shift, and go to state 91


State 85

   44 contar: ID OPAR_ASIG CONTAR PAR_A factor • PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PUN_Y_COM  shift, and go to state 92


State 86

   18 bloque: bloque • sentencia
   27 seleccion: IF PAR_A condicion PAR_C THEN bloque • ENDIF
   28          | IF PAR_A condicion PAR_C THEN bloque • ELSE bloque ENDIF

    IF       shift, and go to state 3
    ENDIF    shift, and go to state 93
    ELSE     shift, and go to state 94
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8

    sentencia   go to state 32
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 87

   40 expresion: expresion $@2 OP_MAS termino •
   47 termino: termino • OP_MULT factor
   48        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 61
    OP_DIV   shift, and go to state 62

    $default  reduce using rule 40 (expresion)


State 88

   42 expresion: expresion $@3 OP_MENOS termino •
   47 termino: termino • OP_MULT factor
   48        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 61
    OP_DIV   shift, and go to state 62

    $default  reduce using rule 42 (expresion)


State 89

   18 bloque: bloque • sentencia
   25 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque • LLAVE_C

    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8
    LLAVE_C  shift, and go to state 95

    sentencia   go to state 32
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 90

    9 lista_var: lista_var COMA ID •

    $default  reduce using rule 9 (lista_var)


State 91

    7 declaracion: DIM $@1 COR_A lista_var COR_C AS • COR_A lista_tipo COR_C

    COR_A  shift, and go to state 96


State 92

   44 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM • COR_A lista_a_contar COR_C PAR_C

    COR_A  shift, and go to state 97


State 93

   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF •

    $default  reduce using rule 27 (seleccion)


State 94

   28 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE • bloque ENDIF

    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8

    bloque      go to state 98
    sentencia   go to state 14
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 95

   25 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C •

    $default  reduce using rule 25 (ciclo)


State 96

    7 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A • lista_tipo COR_C

    TIPO_INT     shift, and go to state 99
    TIPO_FLOAT   shift, and go to state 100
    TIPO_STRING  shift, and go to state 101

    lista_tipo  go to state 102


State 97

   44 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A • lista_a_contar COR_C PAR_C

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    lista_a_contar  go to state 103
    factor          go to state 104


State 98

   18 bloque: bloque • sentencia
   28 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque • ENDIF

    IF       shift, and go to state 3
    ENDIF    shift, and go to state 105
    WHILE    shift, and go to state 4
    DISPLAY  shift, and go to state 5
    GET      shift, and go to state 6
    ID       shift, and go to state 8

    sentencia   go to state 32
    ciclo       go to state 15
    asignacion  go to state 16
    seleccion   go to state 17
    contar      go to state 18
    entrada     go to state 19
    salida      go to state 20


State 99

   13 lista_tipo: TIPO_INT •

    $default  reduce using rule 13 (lista_tipo)


State 100

   14 lista_tipo: TIPO_FLOAT •

    $default  reduce using rule 14 (lista_tipo)


State 101

   15 lista_tipo: TIPO_STRING •

    $default  reduce using rule 15 (lista_tipo)


State 102

    7 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo • COR_C
   10 lista_tipo: lista_tipo • COMA TIPO_INT
   11           | lista_tipo • COMA TIPO_FLOAT
   12           | lista_tipo • COMA TIPO_STRING

    COMA   shift, and go to state 106
    COR_C  shift, and go to state 107


State 103

   44 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar • COR_C PAR_C
   45 lista_a_contar: lista_a_contar • COMA factor

    COMA   shift, and go to state 108
    COR_C  shift, and go to state 109


State 104

   46 lista_a_contar: factor •

    $default  reduce using rule 46 (lista_a_contar)


State 105

   28 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF •

    $default  reduce using rule 28 (seleccion)


State 106

   10 lista_tipo: lista_tipo COMA • TIPO_INT
   11           | lista_tipo COMA • TIPO_FLOAT
   12           | lista_tipo COMA • TIPO_STRING

    TIPO_INT     shift, and go to state 110
    TIPO_FLOAT   shift, and go to state 111
    TIPO_STRING  shift, and go to state 112


State 107

    7 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C •

    $default  reduce using rule 7 (declaracion)


State 108

   45 lista_a_contar: lista_a_contar COMA • factor

    CTE_ENTERA  shift, and go to state 33
    CTE_REAL    shift, and go to state 34
    CTE_STRING  shift, and go to state 35
    ID          shift, and go to state 36
    PAR_A       shift, and go to state 37

    factor  go to state 113


State 109

   44 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C • PAR_C

    PAR_C  shift, and go to state 114


State 110

   10 lista_tipo: lista_tipo COMA TIPO_INT •

    $default  reduce using rule 10 (lista_tipo)


State 111

   11 lista_tipo: lista_tipo COMA TIPO_FLOAT •

    $default  reduce using rule 11 (lista_tipo)


State 112

   12 lista_tipo: lista_tipo COMA TIPO_STRING •

    $default  reduce using rule 12 (lista_tipo)


State 113

   45 lista_a_contar: lista_a_contar COMA factor •

    $default  reduce using rule 45 (lista_a_contar)


State 114

   44 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C •

    $default  reduce using rule 44 (contar)
