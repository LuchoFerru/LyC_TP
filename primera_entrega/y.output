Terminals unused in grammar

    DOS_PUNTOS


Grammar

    0 $accept: s $end

    1 s: programa

    2 programa: PROGRAM algoritmo END
    3         | PROGRAM zona_declaracion algoritmo END

    4 zona_declaracion: declaraciones

    5 declaraciones: declaracion
    6              | declaraciones declaracion

    7 $@1: ε

    8 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    9 lista_var: ID
   10          | lista_var COMA ID

   11 lista_tipo: lista_tipo COMA TIPO_INT
   12           | lista_tipo COMA TIPO_FLOAT
   13           | lista_tipo COMA TIPO_STRING
   14           | TIPO_INT
   15           | TIPO_FLOAT
   16           | TIPO_STRING

   17 algoritmo: bloque

   18 bloque: sentencia
   19       | bloque sentencia

   20 sentencia: asignacion
   21          | seleccion
   22          | ciclo
   23          | entrada
   24          | salida
   25          | contar

   26 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

   27 asignacion: ID OPAR_ASIG expresion

   28 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF
   29          | IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

   30 condicion: comparacion
   31          | comparacion OP_LOG_AND comparacion
   32          | comparacion OP_LOG_OR comparacion
   33          | comparacion OP_LOG_NOT comparacion

   34 comparacion: expresion COMP_IGUAL expresion
   35            | expresion COMP_MAYOR expresion
   36            | expresion COMP_MENOR expresion
   37            | expresion COMP_MAYOR_IGUAL expresion
   38            | expresion COMP_MENOR_IGUAL expresion
   39            | expresion COMP_DISTINTO expresion

   40 $@2: ε

   41 expresion: expresion $@2 OP_MAS termino

   42 $@3: ε

   43 expresion: expresion $@3 OP_MENOS termino
   44          | termino

   45 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

   46 lista_a_contar: lista_a_contar COMA factor
   47               | factor

   48 termino: termino OP_MULT factor
   49        | termino OP_DIV factor
   50        | factor

   51 factor: ID
   52       | CTE_ENTERA
   53       | CTE_REAL
   54       | CTE_STRING
   55       | PAR_A expresion PAR_C

   56 entrada: GET ID

   57 salida: DISPLAY CTE_STRING
   58       | DISPLAY ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2 3
    END (259) 2 3
    IF (260) 28 29
    THEN (261) 28 29
    ENDIF (262) 28 29
    ELSE (263) 29
    WHILE (264) 26
    DISPLAY (265) 57 58
    GET (266) 56
    DIM (267) 8
    AS (268) 8
    COMP_IGUAL (269) 34
    COMP_MAYOR (270) 35
    COMP_MENOR (271) 36
    COMP_MAYOR_IGUAL (272) 37
    COMP_MENOR_IGUAL (273) 38
    COMP_DISTINTO (274) 39
    OPAR_ASIG (275) 27 45
    TIPO_INT (276) 11 14
    TIPO_FLOAT (277) 12 15
    TIPO_STRING (278) 13 16
    CONTAR (279) 45
    CTE_ENTERA <num> (280) 52
    CTE_REAL <real> (281) 53
    CTE_STRING <str> (282) 54 57
    OP_MAS (283) 41
    OP_MENOS (284) 43
    OP_MULT (285) 48
    OP_DIV (286) 49
    OP_LOG_AND (287) 31
    OP_LOG_OR (288) 32
    OP_LOG_NOT (289) 33
    DOS_PUNTOS (290)
    PUN_Y_COM (291) 45
    COMA (292) 10 11 12 13 46
    ID <strid> (293) 9 10 27 45 51 56 58
    PAR_A (294) 26 28 29 45 55
    PAR_C (295) 26 28 29 45 55
    LLAVE_A (296) 26
    LLAVE_C (297) 26
    COR_A (298) 8 45
    COR_C (299) 8 45


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    s (46)
        on left: 1
        on right: 0
    programa (47)
        on left: 2 3
        on right: 1
    zona_declaracion (48)
        on left: 4
        on right: 3
    declaraciones (49)
        on left: 5 6
        on right: 4 6
    declaracion (50)
        on left: 8
        on right: 5 6
    $@1 (51)
        on left: 7
        on right: 8
    lista_var (52)
        on left: 9 10
        on right: 8 10
    lista_tipo (53)
        on left: 11 12 13 14 15 16
        on right: 8 11 12 13
    algoritmo (54)
        on left: 17
        on right: 2 3
    bloque (55)
        on left: 18 19
        on right: 17 19 26 28 29
    sentencia (56)
        on left: 20 21 22 23 24 25
        on right: 18 19
    ciclo (57)
        on left: 26
        on right: 22
    asignacion (58)
        on left: 27
        on right: 20
    seleccion (59)
        on left: 28 29
        on right: 21
    condicion (60)
        on left: 30 31 32 33
        on right: 26 28 29
    comparacion (61)
        on left: 34 35 36 37 38 39
        on right: 30 31 32 33
    expresion (62)
        on left: 41 43 44
        on right: 27 34 35 36 37 38 39 41 43 55
    $@2 (63)
        on left: 40
        on right: 41
    $@3 (64)
        on left: 42
        on right: 43
    contar (65)
        on left: 45
        on right: 25
    lista_a_contar (66)
        on left: 46 47
        on right: 45 46
    termino (67)
        on left: 48 49 50
        on right: 41 43 44 48 49
    factor (68)
        on left: 51 52 53 54 55
        on right: 45 46 47 48 49 50
    entrada (69)
        on left: 56
        on right: 23
    salida (70)
        on left: 57 58
        on right: 24


State 0

    0 $accept: • s $end

    PROGRAM  shift, and go to state 1

    s         go to state 2
    programa  go to state 3


State 1

    2 programa: PROGRAM • algoritmo END
    3         | PROGRAM • zona_declaracion algoritmo END

    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    DIM      shift, and go to state 8
    ID       shift, and go to state 9

    zona_declaracion  go to state 10
    declaraciones     go to state 11
    declaracion       go to state 12
    algoritmo         go to state 13
    bloque            go to state 14
    sentencia         go to state 15
    ciclo             go to state 16
    asignacion        go to state 17
    seleccion         go to state 18
    contar            go to state 19
    entrada           go to state 20
    salida            go to state 21


State 2

    0 $accept: s • $end

    $end  shift, and go to state 22


State 3

    1 s: programa •

    $default  reduce using rule 1 (s)


State 4

   28 seleccion: IF • PAR_A condicion PAR_C THEN bloque ENDIF
   29          | IF • PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

    PAR_A  shift, and go to state 23


State 5

   26 ciclo: WHILE • PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

    PAR_A  shift, and go to state 24


State 6

   57 salida: DISPLAY • CTE_STRING
   58       | DISPLAY • ID

    CTE_STRING  shift, and go to state 25
    ID          shift, and go to state 26


State 7

   56 entrada: GET • ID

    ID  shift, and go to state 27


State 8

    8 declaracion: DIM • $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    $default  reduce using rule 7 ($@1)

    $@1  go to state 28


State 9

   27 asignacion: ID • OPAR_ASIG expresion
   45 contar: ID • OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    OPAR_ASIG  shift, and go to state 29


State 10

    3 programa: PROGRAM zona_declaracion • algoritmo END

    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9

    algoritmo   go to state 30
    bloque      go to state 14
    sentencia   go to state 15
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 11

    4 zona_declaracion: declaraciones •
    6 declaraciones: declaraciones • declaracion

    DIM  shift, and go to state 8

    $default  reduce using rule 4 (zona_declaracion)

    declaracion  go to state 31


State 12

    5 declaraciones: declaracion •

    $default  reduce using rule 5 (declaraciones)


State 13

    2 programa: PROGRAM algoritmo • END

    END  shift, and go to state 32


State 14

   17 algoritmo: bloque •
   19 bloque: bloque • sentencia

    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9

    $default  reduce using rule 17 (algoritmo)

    sentencia   go to state 33
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 15

   18 bloque: sentencia •

    $default  reduce using rule 18 (bloque)


State 16

   22 sentencia: ciclo •

    $default  reduce using rule 22 (sentencia)


State 17

   20 sentencia: asignacion •

    $default  reduce using rule 20 (sentencia)


State 18

   21 sentencia: seleccion •

    $default  reduce using rule 21 (sentencia)


State 19

   25 sentencia: contar •

    $default  reduce using rule 25 (sentencia)


State 20

   23 sentencia: entrada •

    $default  reduce using rule 23 (sentencia)


State 21

   24 sentencia: salida •

    $default  reduce using rule 24 (sentencia)


State 22

    0 $accept: s $end •

    $default  accept


State 23

   28 seleccion: IF PAR_A • condicion PAR_C THEN bloque ENDIF
   29          | IF PAR_A • condicion PAR_C THEN bloque ELSE bloque ENDIF

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    condicion    go to state 39
    comparacion  go to state 40
    expresion    go to state 41
    termino      go to state 42
    factor       go to state 43


State 24

   26 ciclo: WHILE PAR_A • condicion PAR_C LLAVE_A bloque LLAVE_C

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    condicion    go to state 44
    comparacion  go to state 40
    expresion    go to state 41
    termino      go to state 42
    factor       go to state 43


State 25

   57 salida: DISPLAY CTE_STRING •

    $default  reduce using rule 57 (salida)


State 26

   58 salida: DISPLAY ID •

    $default  reduce using rule 58 (salida)


State 27

   56 entrada: GET ID •

    $default  reduce using rule 56 (entrada)


State 28

    8 declaracion: DIM $@1 • COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    COR_A  shift, and go to state 45


State 29

   27 asignacion: ID OPAR_ASIG • expresion
   45 contar: ID OPAR_ASIG • CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CONTAR      shift, and go to state 46
    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 47
    termino    go to state 42
    factor     go to state 43


State 30

    3 programa: PROGRAM zona_declaracion algoritmo • END

    END  shift, and go to state 48


State 31

    6 declaraciones: declaraciones declaracion •

    $default  reduce using rule 6 (declaraciones)


State 32

    2 programa: PROGRAM algoritmo END •

    $default  reduce using rule 2 (programa)


State 33

   19 bloque: bloque sentencia •

    $default  reduce using rule 19 (bloque)


State 34

   52 factor: CTE_ENTERA •

    $default  reduce using rule 52 (factor)


State 35

   53 factor: CTE_REAL •

    $default  reduce using rule 53 (factor)


State 36

   54 factor: CTE_STRING •

    $default  reduce using rule 54 (factor)


State 37

   51 factor: ID •

    $default  reduce using rule 51 (factor)


State 38

   55 factor: PAR_A • expresion PAR_C

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 49
    termino    go to state 42
    factor     go to state 43


State 39

   28 seleccion: IF PAR_A condicion • PAR_C THEN bloque ENDIF
   29          | IF PAR_A condicion • PAR_C THEN bloque ELSE bloque ENDIF

    PAR_C  shift, and go to state 50


State 40

   30 condicion: comparacion •
   31          | comparacion • OP_LOG_AND comparacion
   32          | comparacion • OP_LOG_OR comparacion
   33          | comparacion • OP_LOG_NOT comparacion

    OP_LOG_AND  shift, and go to state 51
    OP_LOG_OR   shift, and go to state 52
    OP_LOG_NOT  shift, and go to state 53

    $default  reduce using rule 30 (condicion)


State 41

   34 comparacion: expresion • COMP_IGUAL expresion
   35            | expresion • COMP_MAYOR expresion
   36            | expresion • COMP_MENOR expresion
   37            | expresion • COMP_MAYOR_IGUAL expresion
   38            | expresion • COMP_MENOR_IGUAL expresion
   39            | expresion • COMP_DISTINTO expresion
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    COMP_IGUAL        shift, and go to state 54
    COMP_MAYOR        shift, and go to state 55
    COMP_MENOR        shift, and go to state 56
    COMP_MAYOR_IGUAL  shift, and go to state 57
    COMP_MENOR_IGUAL  shift, and go to state 58
    COMP_DISTINTO     shift, and go to state 59

    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 40 ($@2)

    $@2  go to state 60
    $@3  go to state 61


State 42

   44 expresion: termino •
   48 termino: termino • OP_MULT factor
   49        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 62
    OP_DIV   shift, and go to state 63

    $default  reduce using rule 44 (expresion)


State 43

   50 termino: factor •

    $default  reduce using rule 50 (termino)


State 44

   26 ciclo: WHILE PAR_A condicion • PAR_C LLAVE_A bloque LLAVE_C

    PAR_C  shift, and go to state 64


State 45

    8 declaracion: DIM $@1 COR_A • lista_var COR_C AS COR_A lista_tipo COR_C

    ID  shift, and go to state 65

    lista_var  go to state 66


State 46

   45 contar: ID OPAR_ASIG CONTAR • PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PAR_A  shift, and go to state 67


State 47

   27 asignacion: ID OPAR_ASIG expresion •
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 40 ($@2)
    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 27 (asignacion)

    $@2  go to state 60
    $@3  go to state 61


State 48

    3 programa: PROGRAM zona_declaracion algoritmo END •

    $default  reduce using rule 3 (programa)


State 49

   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino
   55 factor: PAR_A expresion • PAR_C

    PAR_C  shift, and go to state 68

    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 40 ($@2)

    $@2  go to state 60
    $@3  go to state 61


State 50

   28 seleccion: IF PAR_A condicion PAR_C • THEN bloque ENDIF
   29          | IF PAR_A condicion PAR_C • THEN bloque ELSE bloque ENDIF

    THEN  shift, and go to state 69


State 51

   31 condicion: comparacion OP_LOG_AND • comparacion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    comparacion  go to state 70
    expresion    go to state 41
    termino      go to state 42
    factor       go to state 43


State 52

   32 condicion: comparacion OP_LOG_OR • comparacion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    comparacion  go to state 71
    expresion    go to state 41
    termino      go to state 42
    factor       go to state 43


State 53

   33 condicion: comparacion OP_LOG_NOT • comparacion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    comparacion  go to state 72
    expresion    go to state 41
    termino      go to state 42
    factor       go to state 43


State 54

   34 comparacion: expresion COMP_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 73
    termino    go to state 42
    factor     go to state 43


State 55

   35 comparacion: expresion COMP_MAYOR • expresion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 74
    termino    go to state 42
    factor     go to state 43


State 56

   36 comparacion: expresion COMP_MENOR • expresion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 75
    termino    go to state 42
    factor     go to state 43


State 57

   37 comparacion: expresion COMP_MAYOR_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 76
    termino    go to state 42
    factor     go to state 43


State 58

   38 comparacion: expresion COMP_MENOR_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 77
    termino    go to state 42
    factor     go to state 43


State 59

   39 comparacion: expresion COMP_DISTINTO • expresion

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    expresion  go to state 78
    termino    go to state 42
    factor     go to state 43


State 60

   41 expresion: expresion $@2 • OP_MAS termino

    OP_MAS  shift, and go to state 79


State 61

   43 expresion: expresion $@3 • OP_MENOS termino

    OP_MENOS  shift, and go to state 80


State 62

   48 termino: termino OP_MULT • factor

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    factor  go to state 81


State 63

   49 termino: termino OP_DIV • factor

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    factor  go to state 82


State 64

   26 ciclo: WHILE PAR_A condicion PAR_C • LLAVE_A bloque LLAVE_C

    LLAVE_A  shift, and go to state 83


State 65

    9 lista_var: ID •

    $default  reduce using rule 9 (lista_var)


State 66

    8 declaracion: DIM $@1 COR_A lista_var • COR_C AS COR_A lista_tipo COR_C
   10 lista_var: lista_var • COMA ID

    COMA   shift, and go to state 84
    COR_C  shift, and go to state 85


State 67

   45 contar: ID OPAR_ASIG CONTAR PAR_A • factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    factor  go to state 86


State 68

   55 factor: PAR_A expresion PAR_C •

    $default  reduce using rule 55 (factor)


State 69

   28 seleccion: IF PAR_A condicion PAR_C THEN • bloque ENDIF
   29          | IF PAR_A condicion PAR_C THEN • bloque ELSE bloque ENDIF

    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9

    bloque      go to state 87
    sentencia   go to state 15
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 70

   31 condicion: comparacion OP_LOG_AND comparacion •

    $default  reduce using rule 31 (condicion)


State 71

   32 condicion: comparacion OP_LOG_OR comparacion •

    $default  reduce using rule 32 (condicion)


State 72

   33 condicion: comparacion OP_LOG_NOT comparacion •

    $default  reduce using rule 33 (condicion)


State 73

   34 comparacion: expresion COMP_IGUAL expresion •
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 40 ($@2)
    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 34 (comparacion)

    $@2  go to state 60
    $@3  go to state 61


State 74

   35 comparacion: expresion COMP_MAYOR expresion •
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 40 ($@2)
    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 35 (comparacion)

    $@2  go to state 60
    $@3  go to state 61


State 75

   36 comparacion: expresion COMP_MENOR expresion •
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 40 ($@2)
    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 36 (comparacion)

    $@2  go to state 60
    $@3  go to state 61


State 76

   37 comparacion: expresion COMP_MAYOR_IGUAL expresion •
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 40 ($@2)
    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 37 (comparacion)

    $@2  go to state 60
    $@3  go to state 61


State 77

   38 comparacion: expresion COMP_MENOR_IGUAL expresion •
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 40 ($@2)
    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 38 (comparacion)

    $@2  go to state 60
    $@3  go to state 61


State 78

   39 comparacion: expresion COMP_DISTINTO expresion •
   41 expresion: expresion • $@2 OP_MAS termino
   43          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 40 ($@2)
    OP_MENOS  reduce using rule 42 ($@3)
    $default  reduce using rule 39 (comparacion)

    $@2  go to state 60
    $@3  go to state 61


State 79

   41 expresion: expresion $@2 OP_MAS • termino

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    termino  go to state 88
    factor   go to state 43


State 80

   43 expresion: expresion $@3 OP_MENOS • termino

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    termino  go to state 89
    factor   go to state 43


State 81

   48 termino: termino OP_MULT factor •

    $default  reduce using rule 48 (termino)


State 82

   49 termino: termino OP_DIV factor •

    $default  reduce using rule 49 (termino)


State 83

   26 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A • bloque LLAVE_C

    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9

    bloque      go to state 90
    sentencia   go to state 15
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 84

   10 lista_var: lista_var COMA • ID

    ID  shift, and go to state 91


State 85

    8 declaracion: DIM $@1 COR_A lista_var COR_C • AS COR_A lista_tipo COR_C

    AS  shift, and go to state 92


State 86

   45 contar: ID OPAR_ASIG CONTAR PAR_A factor • PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PUN_Y_COM  shift, and go to state 93


State 87

   19 bloque: bloque • sentencia
   28 seleccion: IF PAR_A condicion PAR_C THEN bloque • ENDIF
   29          | IF PAR_A condicion PAR_C THEN bloque • ELSE bloque ENDIF

    IF       shift, and go to state 4
    ENDIF    shift, and go to state 94
    ELSE     shift, and go to state 95
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9

    sentencia   go to state 33
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 88

   41 expresion: expresion $@2 OP_MAS termino •
   48 termino: termino • OP_MULT factor
   49        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 62
    OP_DIV   shift, and go to state 63

    $default  reduce using rule 41 (expresion)


State 89

   43 expresion: expresion $@3 OP_MENOS termino •
   48 termino: termino • OP_MULT factor
   49        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 62
    OP_DIV   shift, and go to state 63

    $default  reduce using rule 43 (expresion)


State 90

   19 bloque: bloque • sentencia
   26 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque • LLAVE_C

    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9
    LLAVE_C  shift, and go to state 96

    sentencia   go to state 33
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 91

   10 lista_var: lista_var COMA ID •

    $default  reduce using rule 10 (lista_var)


State 92

    8 declaracion: DIM $@1 COR_A lista_var COR_C AS • COR_A lista_tipo COR_C

    COR_A  shift, and go to state 97


State 93

   45 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM • COR_A lista_a_contar COR_C PAR_C

    COR_A  shift, and go to state 98


State 94

   28 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF •

    $default  reduce using rule 28 (seleccion)


State 95

   29 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE • bloque ENDIF

    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9

    bloque      go to state 99
    sentencia   go to state 15
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 96

   26 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C •

    $default  reduce using rule 26 (ciclo)


State 97

    8 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A • lista_tipo COR_C

    TIPO_INT     shift, and go to state 100
    TIPO_FLOAT   shift, and go to state 101
    TIPO_STRING  shift, and go to state 102

    lista_tipo  go to state 103


State 98

   45 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A • lista_a_contar COR_C PAR_C

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    lista_a_contar  go to state 104
    factor          go to state 105


State 99

   19 bloque: bloque • sentencia
   29 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque • ENDIF

    IF       shift, and go to state 4
    ENDIF    shift, and go to state 106
    WHILE    shift, and go to state 5
    DISPLAY  shift, and go to state 6
    GET      shift, and go to state 7
    ID       shift, and go to state 9

    sentencia   go to state 33
    ciclo       go to state 16
    asignacion  go to state 17
    seleccion   go to state 18
    contar      go to state 19
    entrada     go to state 20
    salida      go to state 21


State 100

   14 lista_tipo: TIPO_INT •

    $default  reduce using rule 14 (lista_tipo)


State 101

   15 lista_tipo: TIPO_FLOAT •

    $default  reduce using rule 15 (lista_tipo)


State 102

   16 lista_tipo: TIPO_STRING •

    $default  reduce using rule 16 (lista_tipo)


State 103

    8 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo • COR_C
   11 lista_tipo: lista_tipo • COMA TIPO_INT
   12           | lista_tipo • COMA TIPO_FLOAT
   13           | lista_tipo • COMA TIPO_STRING

    COMA   shift, and go to state 107
    COR_C  shift, and go to state 108


State 104

   45 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar • COR_C PAR_C
   46 lista_a_contar: lista_a_contar • COMA factor

    COMA   shift, and go to state 109
    COR_C  shift, and go to state 110


State 105

   47 lista_a_contar: factor •

    $default  reduce using rule 47 (lista_a_contar)


State 106

   29 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF •

    $default  reduce using rule 29 (seleccion)


State 107

   11 lista_tipo: lista_tipo COMA • TIPO_INT
   12           | lista_tipo COMA • TIPO_FLOAT
   13           | lista_tipo COMA • TIPO_STRING

    TIPO_INT     shift, and go to state 111
    TIPO_FLOAT   shift, and go to state 112
    TIPO_STRING  shift, and go to state 113


State 108

    8 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C •

    $default  reduce using rule 8 (declaracion)


State 109

   46 lista_a_contar: lista_a_contar COMA • factor

    CTE_ENTERA  shift, and go to state 34
    CTE_REAL    shift, and go to state 35
    CTE_STRING  shift, and go to state 36
    ID          shift, and go to state 37
    PAR_A       shift, and go to state 38

    factor  go to state 114


State 110

   45 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C • PAR_C

    PAR_C  shift, and go to state 115


State 111

   11 lista_tipo: lista_tipo COMA TIPO_INT •

    $default  reduce using rule 11 (lista_tipo)


State 112

   12 lista_tipo: lista_tipo COMA TIPO_FLOAT •

    $default  reduce using rule 12 (lista_tipo)


State 113

   13 lista_tipo: lista_tipo COMA TIPO_STRING •

    $default  reduce using rule 13 (lista_tipo)


State 114

   46 lista_a_contar: lista_a_contar COMA factor •

    $default  reduce using rule 46 (lista_a_contar)


State 115

   45 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C •

    $default  reduce using rule 45 (contar)
